// Code generated by mockery v2.35.4. DO NOT EDIT.

package log

import mock "github.com/stretchr/testify/mock"

// mockListener is an autogenerated mock type for the Listener type
type mockListener struct {
	mock.Mock
}

// HandleLog provides a mock function with given fields: b
func (_m *mockListener) HandleLog(b Broadcast) {
	_m.Called(b)
}

// JobID provides a mock function with given fields:
func (_m *mockListener) JobID() int32 {
	ret := _m.Called()

	var r0 int32
	if rf, ok := ret.Get(0).(func() int32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int32)
	}

	return r0
}

// newMockListener creates a new instance of mockListener. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockListener(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockListener {
	mock := &mockListener{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
